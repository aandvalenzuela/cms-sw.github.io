#! /usr/bin/env python

from os.path import basename, exists
from commands import getstatusoutput
from argparse import ArgumentParser

DATA_DIR='data'

#
# clean up the results in the given directory that are older than the date given as a parameter
# the IB date must be in the same format as in the IBs
#
def clean_up_results(earliest_date ):
  
  if not exists(DATA_DIR):
    print( 'Directory not found: ' + DATA_DIR)
    return

  e, o = getstatusoutput("find %s -name '20[0-9][0-9]-[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]' -type d" % DATA_DIR)
  if e:
    print o
    return
  for cdir in o.split("\n"):
    current_date = basename(cdir)
    if current_date < earliest_date:
      if args.dryRun:
        print( 'Not deleting (dry-run): %s' % cdir )
      else:
        print( 'Deleting: %s because it was too old' % cdir )
        getstatusoutput("rm -rf %s" % cdir)
  return

#-----------------------------------------------------------------------------------
#---- Start
#-----------------------------------------------------------------------------------

if __name__ == "__main__":

  parser = ArgumentParser()
  parser.add_argument("-d","--date", type=str, help="Results older than this date will be deleted. "
                                                    "The date must be in the same format as it is in the IBs"
                                                    , required=True)
  parser.add_argument("-n", "--dry-run", dest="dryRun", help="Don't actually delete anything", action="store_true", default=False)
  args = parser.parse_args()

  clean_up_results(args.date)
